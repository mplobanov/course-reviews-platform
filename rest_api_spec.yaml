openapi: 3.0.3
info:
  title: Course Management API
  description: API for managing courses, teachers, reviews, and users.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production server
# TODO: Auth
# TODO: Пагинация
# TODO: POST запросы
# TODO: система оценок

paths:
  /courses:
    get:
      summary: Get courss
      operationId: getCourses
      parameters:
        - name: only_available
          in: query
          required: false
          schema:
            type: boolean
        - name: have_extern
          in: query
          required: false
          schema:
            type: boolean
        - name: high_simplicity
          in: query
          required: false
          schema:
            type: boolean
        - name: high_teacher_rating
          in: query
          required: false
          schema:
            type: boolean
        - name: text_query
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of courses
          content:
            application/json:
              schema:
                type: object
                properties:
                  courses:
                    type: array
                    items:
                      $ref: "#/components/schemas/CourseShortInfo"

        "403":
          description: User not authorized
    # post:
    #   summary: Create a course
    #   operationId: postCourse
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/CourseInfo'  #TODO: обдумать
    #   responses:
    #     '201':
    #       description: Course created
    #     '403':
    #       description: User not authorized

  /courses/{id}:
    get:
      summary: Get course details
      operationId: getCourse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseInfo'
        '403':
          description: User not authorized
        '404':
          description: "Course not found"

  /courses/{id}/reviews:
    get:
      summary: Get course reviews
      operationId: getCourseReviews
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of course reviews
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
        '403':
          description: User not authorized
        '404':
          description: "Course not found"

  /teachers:
    get:
      summary: Search teachers
      operationId: getTeachers
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of teachers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        profile_pic_url:
          type: string
        passport_token:
          type: string
        is_superuser:
          type: boolean
      required: [id, name, passport_token]

    Teacher:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        average_grade:
          type: number
      required: [id]

    Mark:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        value:
          type: number
        max_value:
          type: number

    CourseShortInfo:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        is_passed:
          type: boolean
        has_extern:
          type: boolean
        recredit_available:
          type: boolean
        teacher:
          $ref: "#/components/schemas/Teacher"
        prerequisites:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
        avg_mark:
          type: number

      required:
        [
          id,
          name,
          is_passed,
          has_extern,
          recredit_available,
          teacher,
          prerequisites,
          marks,
        ]

    CourseInfo:
      type: object
      allOf:
        - $ref: "#/components/schemas/CourseShortInfo"
        - type: object
          properties:
            marks:
              type: array
              items:
                type: object
                allOf:
                - $ref: "#/components/schemas/Mark"
                - type: object
                  properties:
                    note:
                      type: string
            general_description:
              type: string
            extern_description:
              type: string
            recredit_description:
              type: string
          required: [general_description]

    Grade:
      type: object
      properties:
        likes:
          type: integer
        dislikes:
          type: integer
      required: [likes, dislikes]

    Review:
      type: object
      properties:
        author:
          $ref: "#/components/schemas/User"
        marks:
          type: array
          items:
            $ref: "#/components/schemas/Mark"
        text:
          type: string
        is_extern:
          type: boolean
        is_recredit:
          type: boolean
        is_hidden:
          type: boolean
        grades:
          type: object
          $ref: "#/components/schemas/Grade"
      required: [marks, grades]
